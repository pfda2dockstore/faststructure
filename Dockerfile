# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 04:24:06 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: faststructure, revision: 15, authored by: mark.wright
# https://precision.fda.gov/apps/app-ByXKgF009jjqqVP335kgvPKY

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Install app-specific Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	cython \
	gsl-bin \
	libgsl0-dev \
	python-numpy \
	python-scipy

# Download app assets
RUN curl https://dl.dnanex.us/F/D/7jJxKYkJ06K49z919k5fKv7JXK1j7bgfZF9pK0k1/faststructure.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"input_bed\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"PLINK\\ .bed\\ Input\\ File\\\",\\\"help\\\":\\\"PLINK\\ binary\\ genotype\\ file\\ with\\ samples\\ you\\ want\\ to\\ analyze\\\"\\},\\{\\\"name\\\":\\\"n_subpops\\\",\\\"class\\\":\\\"int\\\",\\\"optional\\\":false,\\\"label\\\":\\\"K\\\",\\\"help\\\":\\\"Number\\ of\\ subpopulations\\ expected\\ in\\ the\\ data\\\",\\\"default\\\":3,\\\"choices\\\":\\[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\\]\\},\\{\\\"name\\\":\\\"input_fam\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"PLINK\\ .fam\\ Input\\ File\\\",\\\"help\\\":\\\"PLINK\\ binary\\ format\\ sample\\ definition\\ file\\\"\\},\\{\\\"name\\\":\\\"input_bim\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"PLINK\\ .bim\\ Input\\ File\\\",\\\"help\\\":\\\"PLINK\\ binary\\ format\\ marker\\ definition\\ file\\\"\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"q_output_fname\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"STRUCTURE\\ .Q\\ output\\ file\\\",\\\"help\\\":\\\"This\\ output\\ file\\ contains\\ the\\ posterior\\ mean\\ proportion\\ of\\ each\\ sample\\'s\\ genome\\ originating\\ from\\ each\\ subpopulation\\\"\\},\\{\\\"name\\\":\\\"p_output_fname\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"STRUCTURE\\ .P\\ output\\ file\\\",\\\"help\\\":\\\"\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"himem-2\\\"\\},\\\"assets\\\":\\[\\\"file-ByVpB3Q017Gq30qp04Pp3jBb\\\"\\],\\\"packages\\\":\\[\\\"cython\\\",\\\"gsl-bin\\\",\\\"libgsl0-dev\\\",\\\"python-numpy\\\",\\\"python-scipy\\\"\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"\\#\\ Organize\\ input\\ files\\ -\\ fastSTRUCTURE\\ takes\\ the\\ plink\\ basename\\ \\\\n\\#\\ and\\ expects\\ the\\ usual\\ trio\\ of\\ plink\\ files\\ with\\ usual\\ suffixes\\\\ncd\\ /\\\\nmv\\ \\$input_bed_path\\ /work/in\\\\nmv\\ \\$input_fam_path\\ /work/in\\\\nmv\\ \\$input_bim_path\\ /work/in\\\\nmkdir\\ -p\\ /work/out\\\\n\\\\n\\#\\ git\\ clone\\ https://github.com/rajanil/fastStructure.git\\\\n\\#\\ Compile\\ the\\ program\\ on\\ \\*this\\*\\ system\\ for\\ proper\\ linking\\ of\\ dependencies\\\\necho\\ Compiling\\ fastSTRUCTURE\\ for\\ this\\ system\\\\\\\\\\'s\\ execution\\ environment\\\\ncd\\ /fastStructure\\\\ncd\\ vars\\ \\\\u0026\\\\u0026\\ python\\ setup.py\\ clean\\ \\\\u0026\\\\u0026\\ rm\\ -f\\ \\*.so\\\\nCFLAGS\\=\\\\\\\"-Wno-cpp\\ -Wno-unused-function\\\\\\\"\\ python\\ setup.py\\ build_ext\\ --force\\ --inplace\\\\ncd\\ ..\\ \\\\u0026\\\\u0026\\ python\\ setup.py\\ clean\\ \\\\u0026\\\\u0026\\ rm\\ -f\\ \\*.so\\\\nCFLAGS\\=\\\\\\\"-Wno-cpp\\ -Wno-unused-function\\\\\\\"\\ python\\ setup.py\\ build_ext\\ --force\\ --inplace\\\\n\\\\n\\#\\ run\\ fastSTRUCTURE\\\\necho\\ Starting\\ fastSTRUCTURE\\ program\\ and\\ analysis\\\\npython\\ structure.py\\ -K\\ \\$\\{n_subpops\\}\\ --input\\=/work/in/\\$\\{input_bed_prefix\\}\\ --output\\=/work/out/\\$input_bed_prefix\\\\n\\\\n\\#\\ Return\\ output\\\\nemit\\ q_output_fname\\ /work/out/\\$\\{input_bed_prefix\\}.\\$\\{n_subpops\\}.meanQ\\\\nemit\\ p_output_fname\\ /work/out/\\$\\{input_bed_prefix\\}.\\$\\{n_subpops\\}.meanP\\\\n\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work